<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.offershow.repository.OfferRepository">

    <!-- 基础字段映射 -->
    <resultMap id="BaseResultMap" type="com.offershow.model.entity.Offer">
        <id column="id" property="id"/>
        <result column="company_name" property="companyName"/>
        <result column="position" property="position"/>
        <result column="city" property="city"/>
        <result column="salary_structure" property="salaryStructure"/>
        <result column="work_years" property="workYears"/>
        <result column="job_description" property="jobDescription"/>
        <result column="interview_process" property="interviewProcess"/>
        <result column="interview_difficulty" property="interviewDifficulty"/>
        <result column="is_accepted" property="isAccepted"/>
        <result column="reject_reason" property="rejectReason"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
        <result column="is_deleted" property="isDeleted"/>
    </resultMap>

    <!-- 基础查询列 -->
    <sql id="Base_Column_List">
        id, company_name, position, city, salary_structure, work_years, job_description,
        interview_process, interview_difficulty, is_accepted, reject_reason, created_at, updated_at, is_deleted
    </sql>

    <!-- 插入Offer -->
    <insert id="insert" parameterType="com.offershow.model.entity.Offer" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO offers (
            company_name, position, city, salary_structure, work_years, job_description,
            interview_process, interview_difficulty, is_accepted, reject_reason, created_at, updated_at
        ) VALUES (
                     #{companyName}, #{position}, #{city}, #{salaryStructure}, #{workYears}, #{jobDescription},
                     #{interviewProcess}, #{interviewDifficulty}, #{isAccepted}, #{rejectReason}, #{createdAt}, #{updatedAt}
                 )
    </insert>

    <!-- 更新Offer -->
    <update id="update" parameterType="com.offershow.model.entity.Offer">
        UPDATE offers
        SET company_name = #{companyName},
            position = #{position},
            city = #{city},
            salary_structure = #{salaryStructure},
            work_years = #{workYears},
            job_description = #{jobDescription},
            interview_process = #{interviewProcess},
            interview_difficulty = #{interviewDifficulty},
            is_accepted = #{isAccepted},
            reject_reason = #{rejectReason},
            updated_at = #{updatedAt},
            is_deleted = #{isDeleted}
        WHERE id = #{id}
    </update>

    <!-- 根据ID查询Offer -->
    <select id="findById" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM offers
        WHERE id = #{id}
    </select>

    <!-- 根据关键词查询Offer -->
    <select id="findByKeyword" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM offers
        WHERE is_deleted = 0
        <if test="keyword != null and keyword != ''">
            AND (
            company_name LIKE CONCAT('%', #{keyword}, '%')
            OR position LIKE CONCAT('%', #{keyword}, '%')
            OR city LIKE CONCAT('%', #{keyword}, '%')
            OR job_description LIKE CONCAT('%', #{keyword}, '%')
            )
        </if>
        ORDER BY created_at DESC
        LIMIT #{offset}, #{limit}
    </select>

    <!-- 统计符合关键词的Offer数量 -->
    <select id="countByKeyword" resultType="int">
        SELECT COUNT(*)
        FROM offers
        WHERE is_deleted = 0
        <if test="keyword != null and keyword != ''">
            AND (
            company_name LIKE CONCAT('%', #{keyword}, '%')
            OR position LIKE CONCAT('%', #{keyword}, '%')
            OR city LIKE CONCAT('%', #{keyword}, '%')
            OR job_description LIKE CONCAT('%', #{keyword}, '%')
            )
        </if>
    </select>

    <!-- 根据ID列表批量查询Offer -->
    <select id="findByIds" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM offers
        WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        AND is_deleted = 0
    </select>

    <!-- 查询指定时间范围内的所有Offer -->
    <select id="findByDateRange" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM offers
        WHERE is_deleted = 0
        <if test="startDate != null and startDate != ''">
            AND created_at >= #{startDate}
        </if>
        <if test="endDate != null and endDate != ''">
            AND created_at &lt;= #{endDate}
        </if>
        ORDER BY created_at DESC
    </select>

</mapper>